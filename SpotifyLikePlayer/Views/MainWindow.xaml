<Window x:Class="SpotifyLikePlayer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SpotifyLikePlayer"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:converters="clr-namespace:SpotifyLikePlayer.Converters"
		xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
		xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
		xmlns:models="clr-namespace:SpotifyLikePlayer.Models"
		mc:Ignorable="d"
        Title="Player" Height="600" Width="860"
        DataContext="{Binding RelativeSource={RelativeSource Self}, Path=ViewModel}"
        WindowStartupLocation="CenterScreen" WindowState="Maximized" Topmost="False">
	<Window.Resources>
		<converters:SecondsToTimeConverter x:Key="SecondsToTimeConverter" />
		<Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
						<Grid IsHitTestVisible="False">
							<Border
                        x:Name="HeaderBorder"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}">
								<ContentPresenter
                            x:Name="HeaderContent"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource MaterialDesignFlatButtonClick}" />
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="GenreButtonStyle" TargetType="Button">
			<Setter Property="Background" Value="#2E2E2E"/>
			<Setter Property="Foreground" Value="Lime"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="Height" Value="40"/>
			<Setter Property="BorderBrush" Value="Lime"/>
			<Setter Property="BorderThickness" Value="1.5"/>
			<Setter Property="Cursor" Value="Hand"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="6" Padding="8,4">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" Value="#3A3A3A"/>
								<Setter Property="BorderBrush" Value="LawnGreen"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="MenuItem">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="FontSize" Value="13"/>
			<Setter Property="Padding" Value="6,3"/>
			<Setter Property="Cursor" Value="Hand"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="MenuItem">
						<Border Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            Padding="4,2"
                            Margin="1">
							<ContentPresenter />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsHighlighted" Value="True">
								<Setter Property="Background" Value="#333"/>
								<Setter Property="Foreground" Value="Lime"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Foreground" Value="#777"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<CollectionViewSource x:Key="PlaylistsViewSource" Source="{Binding Playlists}">
			<CollectionViewSource.SortDescriptions>
				<componentModel:SortDescription PropertyName="Name" Direction="Ascending" />
			</CollectionViewSource.SortDescriptions>
			<CollectionViewSource.GroupDescriptions>
				<PropertyGroupDescription PropertyName="IsFavoriteList" />
			</CollectionViewSource.GroupDescriptions>
		</CollectionViewSource>
	</Window.Resources>
	<Grid Background="MediumPurple">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="200" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="80" />
		</Grid.RowDefinitions>

		<!-- Информация о текущей песне и поиск (выше) -->
		<Grid Grid.Row="0" Grid.ColumnSpan="2" Background="#1E1E1E">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<TextBlock Grid.Row="0" Text="Сейчас играет" Foreground="White" FontWeight="Bold" 
                       FontSize="14" Margin="10,5" HorizontalAlignment="Left" />
			<Grid Grid.Row="1">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<StackPanel Grid.Column="1" Orientation="Horizontal" Margin="0,5,0,5" VerticalAlignment="Center">
					<Image Source="{Binding PlayerService.CurrentSong.CoverImage, FallbackValue={x:Null}}" 
                           Width="80" Height="80" Stretch="UniformToFill" Margin="0,0,10,0"/>
					<StackPanel Orientation="Vertical">
						<TextBlock Text="{Binding PlayerService.CurrentSong.Title, TargetNullValue='Unknown Title'}" 
                                   Foreground="White" FontWeight="Bold" FontSize="16"/>
						<TextBlock Text="{Binding PlayerService.CurrentSong.Artist.Name, TargetNullValue='Unknown Artist'}" 
                                   Foreground="LimeGreen" FontSize="14" FontWeight="SemiBold" Cursor=""/>
						<TextBlock Text="{Binding PlayerService.CurrentSong.Album.Title, TargetNullValue='Unknown Album'}" 
                                   Foreground="LimeGreen" FontSize="12"/>
					</StackPanel>
				</StackPanel>
				<TextBox Grid.Column="1" x:Name="SearchBox"
             Width="500"
             Height="60"
             FontSize="20"
             Foreground="White"
             VerticalAlignment="Center"
             HorizontalAlignment="Center"
             materialDesign:HintAssist.Hint="Поиск трека, исполнителя или альбома..."
             TextChanged="SearchBox_TextChanged"
             KeyDown="SearchBox_KeyDown"
             />

				<!-- Красивый Popup для подсказок -->
				<Popup x:Name="SuggestionsPopup"
           PlacementTarget="{Binding ElementName=SearchBox}"
           Placement="Bottom"
           AllowsTransparency="True"
           StaysOpen="False"
           Focusable="False">
					<Border Background="#1E1E1E"
                BorderBrush="#444"
                BorderThickness="1"
                CornerRadius="8"
                Padding="4"
                SnapsToDevicePixels="True"
                Width="{Binding ActualWidth, ElementName=SearchBox}">
						<ScrollViewer MaxHeight="220"
                          VerticalScrollBarVisibility="Auto">
							<ListBox x:Name="SuggestionsList"
                         Background="Transparent"
                         BorderThickness="0"
                         Foreground="White"
                         FontSize="16"
                         MouseLeftButtonUp="SuggestionsList_MouseLeftButtonUp" PreviewMouseWheel="SuggestionsList_PreviewMouseWheel">

								<!-- Визуальный шаблон одной подсказки -->
								<ListBox.ItemTemplate>
									<DataTemplate>
										<Grid Margin="6">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>

											<!-- Иконка -->
											<materialDesign:PackIcon Kind="MusicNote"
                                                         Width="24" Height="24"
                                                         Foreground="LightSkyBlue"
                                                         VerticalAlignment="Center"
                                                         Margin="0,0,10,0"/>

											<!-- Текст -->
											<StackPanel Grid.Column="1" VerticalAlignment="Center">
												<TextBlock Text="{Binding Title}"
                                               FontWeight="Bold"
                                               Foreground="White"
                                               FontSize="16"/>
												<TextBlock Text="{Binding Artist.Name}"
                                               Foreground="#AAAAAA"
                                               FontSize="14"/>
											</StackPanel>
										</Grid>
									</DataTemplate>
								</ListBox.ItemTemplate>

								<!-- Стиль строк -->
								<ListBox.ItemContainerStyle>
									<Style TargetType="ListBoxItem">
										<Setter Property="Padding" Value="4"/>
										<Setter Property="Cursor" Value="Hand"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="ListBoxItem">
													<Border x:Name="border"
                                                Background="Transparent"
                                                CornerRadius="6"
                                                Padding="{TemplateBinding Padding}">
														<ContentPresenter/>
													</Border>
													<ControlTemplate.Triggers>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter TargetName="border" Property="Background" Value="#333"/>
														</Trigger>
														<Trigger Property="IsSelected" Value="True">
															<Setter TargetName="border" Property="Background" Value="#444"/>
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</ListBox.ItemContainerStyle>
							</ListBox>
						</ScrollViewer>
					</Border>
				</Popup>
				<Button Grid.Column="2" x:Name="ChangeGenreButton"
        Style="{StaticResource GenreButtonStyle}"
        Click="ChangeGenreButton_Click" Margin="0,0,15,0">
					<Button.Content>
						<StackPanel Orientation="Horizontal">
							<materialDesign:PackIcon Kind="Music" Width="20" Height="20" Margin="0,0,6,0" Foreground="Lime"/>
							<TextBlock Text="Изменить жанр"/>
						</StackPanel>
					</Button.Content>
				</Button>
			</Grid>
		</Grid>

		<!-- Sidebar: Navigation -->
		<StackPanel Grid.Column="0" Grid.Row="1" Background="#121212">
			<Button Content="Home" Margin="5,5,5,5" Command="{Binding HomeCommand}"/>
			<TextBlock Text="Плейлисты" Foreground="White" FontSize="20"
               FontWeight="Bold" Margin="10,10,0,10"/>
			<ListBox x:Name="PlaylistsListBox"
         MouseDoubleClick="PlaylistsListBox_MouseDoubleClick"
         ItemsSource="{Binding Playlists}"
         SelectedItem="{Binding SelectedPlaylist}"
         Background="#121212"
         Foreground="White"
         BorderThickness="0">

				<ListBox.ItemTemplate>
					<DataTemplate>
						<TextBlock Text="{Binding Name}"
                       FontSize="18"
                       Padding="8"
                       FontWeight="SemiBold">
							<TextBlock.Style>
								<Style TargetType="TextBlock">
									<Setter Property="Foreground" Value="White"/>
									<Style.Triggers>
										<!-- Favorite — выделить цветом Lime -->
										<DataTrigger Binding="{Binding Name}" Value="Favorite">
											<Setter Property="Foreground" Value="Lime"/>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</TextBlock.Style>
						</TextBlock>
					</DataTemplate>
				</ListBox.ItemTemplate>

				<ListBox.ContextMenu>
					<!-- ✅ Привязываем контекст меню к окну -->
					<ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
						<MenuItem Header="Удалить плейлист"
                      Command="{Binding DeletePlaylistCommand}"
                      CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
					</ContextMenu>
				</ListBox.ContextMenu>
			</ListBox>
		</StackPanel>

		<!-- Main Content: Song List -->
		<Grid Grid.Column="1" Grid.Row="1">
			<ListView x:Name="SongsListView"
              ItemsSource="{Binding Songs}"
              SelectedItem="{Binding SelectedSong}"
              Margin="10"
              Background="#121212"
              Foreground="White"
              HorizontalAlignment="Stretch"
              MinWidth="600"
              FontSize="20"
              MouseDoubleClick="SongsListView_MouseDoubleClick">

				<ListView.ItemContainerStyle>
					<Style TargetType="ListViewItem">
						<Setter Property="Background" Value="Transparent" />
						<Setter Property="Foreground" Value="White" />
						<Style.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" Value="#333333" />
							</Trigger>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="Background" Value="#444444" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</ListView.ItemContainerStyle>

				<ListView.View>
					<GridView>
						<GridViewColumn Width="120">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<Image Source="{Binding CoverImage}" Width="80" Height="80" Stretch="UniformToFill" />
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>

						<GridViewColumn Header="Название" DisplayMemberBinding="{Binding Title}" Width="400" />
						<GridViewColumn Header="Артист" DisplayMemberBinding="{Binding Artist.Name}" Width="300" />
						<GridViewColumn Header="Альбом" DisplayMemberBinding="{Binding Album.Title}" Width="300" />
						<GridViewColumn Header="Жанр" DisplayMemberBinding="{Binding Genre}" Width="250" />
						<GridViewColumn Width="150">
							<GridViewColumn.Header>
								<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
									<materialDesign:PackIcon Kind="ClockOutline" Width="18" Height="18" Foreground="White" />
								</StackPanel>
							</GridViewColumn.Header>

							<GridViewColumn.DisplayMemberBinding>
								<Binding Path="Duration" StringFormat="{}{0:mm\:ss}" />
							</GridViewColumn.DisplayMemberBinding>
						</GridViewColumn>

						<GridViewColumn Width="150">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<Button Style="{StaticResource FavoriteStarButton}"
                                    Click="FavoriteButton_Click"
                                    ToolTip="Add to Favorite"
                                    DataContext="{Binding}" />
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
					</GridView>
				</ListView.View>

				<!-- Контекстное меню песен -->
				<ListView.ContextMenu>
					<ContextMenu Opened="SongsContextMenu_Opened"
                 Background="#2a2a2a"
                 Foreground="White"
                 BorderBrush="#444"
                 BorderThickness="1"
                 FontSize="14">
						<MenuItem x:Name="AddToPlaylistMenu"
                  Header="Добавить в плейлист"
                  Foreground="LimeGreen">
						</MenuItem>

						<MenuItem x:Name="RemoveFromPlaylistMenu"
                  Header="Удалить из плейлиста"
                  Foreground="#ff5555">
						</MenuItem>
						<Separator Margin="3,2"/>
						<MenuItem Header="Создать новый плейлист"
                  Command="{Binding CreatePlaylistCommand}"
                  Foreground="LightSkyBlue">
							<MenuItem.Icon>
								<materialDesign:PackIcon Kind="PlaylistPlus"
                                         Width="18" Height="18"
                                         Foreground="LightSkyBlue" />
							</MenuItem.Icon>
						</MenuItem>
					</ContextMenu>
				</ListView.ContextMenu>
			</ListView>
		</Grid>

		<!-- Player Controls -->
		<materialDesign:Card Grid.Row="2" Grid.ColumnSpan="2" Background="#181818">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<!-- Song info -->
					<ColumnDefinition Width="*" />
					<!-- Controls and progress slider -->
					<ColumnDefinition Width="Auto" />
					<!-- Volume slider -->
				</Grid.ColumnDefinitions>

				<!-- Buttons and Progress Slider -->
				<StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Cursor="">
					<Button Command="{Binding PreviousCommand}" Margin="5">
						<materialDesign:PackIcon Kind="SkipPrevious" Width="24" Height="24" Foreground="White" />
					</Button>
					<Button Command="{Binding TogglePlayPauseCommand}" Margin="5">
						<Button.Style>
							<Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
								<Setter Property="Content">
									<Setter.Value>
										<materialDesign:PackIcon Kind="Play" Width="24" Height="24" Foreground="White" />
									</Setter.Value>
								</Setter>
								<Style.Triggers>
									<DataTrigger Binding="{Binding PlayerService.IsPlaying}" Value="True">
										<Setter Property="Content">
											<Setter.Value>
												<materialDesign:PackIcon Kind="Pause" Width="24" Height="24" Foreground="White" />
											</Setter.Value>
										</Setter>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Button.Style>
					</Button>
					<Button Command="{Binding NextCommand}" Margin="5">
						<materialDesign:PackIcon Kind="SkipNext" Width="24" Height="24" Foreground="White" />
					</Button>
					<TextBlock Margin="5" VerticalAlignment="Center" Foreground="White" FontSize="14">
						<TextBlock.Text>
							<MultiBinding Converter="{StaticResource SecondsToTimeConverter}">
								<Binding Path="PlayerService.PositionInSeconds" />
								<Binding Path="PlayerService.DurationInSeconds" />
							</MultiBinding>
						</TextBlock.Text>
					</TextBlock>
					<Slider x:Name="ProgressSlider" Value="{Binding PlayerService.PositionInSeconds, Mode=TwoWay}"
                            Minimum="0" Maximum="{Binding PlayerService.DurationInSeconds}"
                            Width="300" Margin="5" VerticalAlignment="Center" MouseMove="ProgressSlider_MouseMove"/>
					<ToggleButton 
    x:Name="BottomFavoriteButton"
    Width="40"
    Height="40"
    FontSize="28"
    Content="{Binding PlayerService.CurrentSong.IsFavoriteLocal, 
                      Converter={StaticResource FavoriteIconConverter}}"
    Foreground="{Binding PlayerService.CurrentSong.IsFavoriteLocal, 
                      Converter={StaticResource FavoriteColorConverter}}"
    IsChecked="{Binding PlayerService.CurrentSong.IsFavoriteLocal, Mode=OneWay}"
    Background="Transparent"
    BorderThickness="0"
    Command="{Binding ToggleFavoriteCommand}"
    CommandParameter="{Binding PlayerService.CurrentSong}" />
				</StackPanel>

				<!-- Volume Slider (короткий, справа) -->
				<StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10">
					<TextBlock Text="{Binding PlayerService.Volume, StringFormat={}{0:P0}, UpdateSourceTrigger=PropertyChanged}" 
                       Foreground="White" VerticalAlignment="Center" Margin="5,0" MinWidth="30"/>
					<materialDesign:PackIcon Kind="VolumeHigh" VerticalAlignment="Center" Margin="5" Foreground="White" Width="20" Height="20" />
					<Slider Value="{Binding PlayerService.Volume, Mode=TwoWay}" 
                            Minimum="0" Maximum="1" 
                            Width="100" Margin="5" VerticalAlignment="Center"/>
				</StackPanel>
			</Grid>
		</materialDesign:Card>
		<Border Grid.Row="2" Grid.ColumnSpan="2" x:Name="NotificationBorder"
        Background="#AA000000"
        CornerRadius="8"
        Padding="14,8"
        Margin="20,0,0,20"
        HorizontalAlignment="Left"
        VerticalAlignment="Bottom"
        Visibility="Collapsed"
        Opacity="0"
        Panel.ZIndex="9999"
        IsHitTestVisible="False"
        MaxWidth="800">
			<!-- ограничим ширину -->
			<TextBlock x:Name="NotificationText"
               Foreground="Lime"
               FontSize="16"
               FontWeight="SemiBold"
               TextWrapping="Wrap"
               TextTrimming="CharacterEllipsis" />
		</Border>
	</Grid>
</Window>