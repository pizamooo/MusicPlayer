<Window x:Class="SpotifyLikePlayer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SpotifyLikePlayer"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:converters="clr-namespace:SpotifyLikePlayer.Converters"
        mc:Ignorable="d"
        Title="Player" Height="600" Width="860"
        DataContext="{Binding RelativeSource={RelativeSource Self}, Path=ViewModel}"
        WindowStartupLocation="CenterScreen" WindowState="Maximized" Topmost="False">
	<Window.Resources>
		<converters:SecondsToTimeConverter x:Key="SecondsToTimeConverter" />
		<Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
						<Grid IsHitTestVisible="False">
							<Border
                        x:Name="HeaderBorder"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}">
								<ContentPresenter
                            x:Name="HeaderContent"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource MaterialDesignFlatButtonClick}" />
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>
	<Grid Background="MediumPurple">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="200" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="80" />
		</Grid.RowDefinitions>

		<!-- Информация о текущей песне и поиск (выше) -->
		<Grid Grid.Row="0" Grid.ColumnSpan="2" Background="#1E1E1E">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<TextBlock Grid.Row="0" Text="Сейчас играет" Foreground="White" FontWeight="Bold" 
                       FontSize="14" Margin="10,5" HorizontalAlignment="Left" />
			<Grid Grid.Row="1">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<StackPanel Grid.Column="1" Orientation="Horizontal" Margin="0,5,0,5" VerticalAlignment="Center">
					<Image Source="{Binding PlayerService.CurrentSong.CoverImage, FallbackValue={x:Null}}" 
                           Width="80" Height="80" Stretch="UniformToFill" Margin="0,0,10,0"/>
					<StackPanel Orientation="Vertical">
						<TextBlock Text="{Binding PlayerService.CurrentSong.Title, TargetNullValue='Unknown Title'}" 
                                   Foreground="White" FontWeight="Bold" FontSize="16"/>
						<TextBlock Text="{Binding PlayerService.CurrentSong.Artist.Name, TargetNullValue='Unknown Artist'}" 
                                   Foreground="LimeGreen" FontSize="14" FontWeight="SemiBold"/>
						<TextBlock Text="{Binding PlayerService.CurrentSong.Album.Title, TargetNullValue='Unknown Album'}" 
                                   Foreground="LimeGreen" FontSize="12"/>
					</StackPanel>
				</StackPanel>
				<TextBox Grid.Column="1" materialDesign:HintAssist.Hint="Search any track..." 
                         TextChanged="Search_TextChanged" 
                         Width="500" Height="60" FontSize="20" Foreground="White"
                         VerticalAlignment="Center" HorizontalAlignment="Center" />
			</Grid>
		</Grid>

		<!-- Sidebar: Navigation -->
		<StackPanel Grid.Column="0" Grid.Row="1" Background="#121212">
			<Button Content="Home" Margin="5,5,5,5"/>
			<ListBox ItemsSource="{Binding Playlists}" SelectedItem="{Binding SelectedPlaylist}" 
                     DisplayMemberPath="Name" Margin="5" SelectionChanged="Playlist_SelectionChanged" />
		</StackPanel>

		<!-- Main Content: Song List -->
		<Grid Grid.Column="1" Grid.Row="1">
			<ListView x:Name="SongsListView" ItemsSource="{Binding DisplayedSongs}" SelectedItem="{Binding SelectedSong}" 
                      Margin="10" Background="#121212" Foreground="White" 
                      HorizontalAlignment="Stretch" MinWidth="600" FontSize="20" MouseDoubleClick="SongsListView_MouseDoubleClick" Cursor="">
				<ListView.ItemContainerStyle>
					<Style TargetType="ListViewItem">
						<Setter Property="Background" Value="Transparent" />
						<Setter Property="Foreground" Value="White" />
						<Style.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" Value="#333333" />
								<Setter Property="Foreground" Value="White" />
							</Trigger>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="Background" Value="#444444" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</ListView.ItemContainerStyle>
				<ListView.View>
					<GridView>
						<GridViewColumn Width="120">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<Image Source="{Binding CoverImage}" Width="80" Height="80" Stretch="UniformToFill" />
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
						<GridViewColumn Header="Title" DisplayMemberBinding="{Binding Title}" Width="300" />
						<GridViewColumn Header="Artist" DisplayMemberBinding="{Binding Artist.Name}" Width="300" />
						<GridViewColumn Header="Album" DisplayMemberBinding="{Binding Album.Title}" Width="300" />
						<GridViewColumn Header="Genre" DisplayMemberBinding="{Binding Genre}" Width="250" />
						<GridViewColumn Header="Duration" DisplayMemberBinding="{Binding Duration, StringFormat={}{0:mm\\:ss}}" Width="150"/>
						<GridViewColumn Header="" Width="100">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<Button Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.AddToFavoriteCommand}" 
                                    Background="Transparent" BorderThickness="0" Margin="5">
										<materialDesign:PackIcon x:Name="FavoriteIcon" Kind="HeartOutline" Width="24" Height="24" Foreground="White" />
									</Button>
									<DataTemplate.Triggers>
										<DataTrigger Binding="{Binding IsFavorite}" Value="True">
											<Setter TargetName="FavoriteIcon" Property="Kind" Value="Heart" />
										</DataTrigger>
									</DataTemplate.Triggers>
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
					</GridView>
				</ListView.View>
			</ListView>
		</Grid>

		<!-- Player Controls -->
		<materialDesign:Card Grid.Row="2" Grid.ColumnSpan="2" Background="#181818">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<!-- Song info -->
					<ColumnDefinition Width="*" />
					<!-- Controls and progress slider -->
					<ColumnDefinition Width="Auto" />
					<!-- Volume slider -->
				</Grid.ColumnDefinitions>

				<!-- Buttons and Progress Slider -->
				<StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
					<Button Command="{Binding PreviousCommand}" Margin="5">
						<materialDesign:PackIcon Kind="SkipPrevious" Width="24" Height="24" Foreground="White" />
					</Button>
					<Button Command="{Binding TogglePlayPauseCommand}" Margin="5">
						<Button.Style>
							<Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
								<Setter Property="Content">
									<Setter.Value>
										<materialDesign:PackIcon Kind="Play" Width="24" Height="24" Foreground="White" />
									</Setter.Value>
								</Setter>
								<Style.Triggers>
									<DataTrigger Binding="{Binding PlayerService.IsPlaying}" Value="True">
										<Setter Property="Content">
											<Setter.Value>
												<materialDesign:PackIcon Kind="Pause" Width="24" Height="24" Foreground="White" />
											</Setter.Value>
										</Setter>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Button.Style>
					</Button>
					<Button Command="{Binding NextCommand}" Margin="5">
						<materialDesign:PackIcon Kind="SkipNext" Width="24" Height="24" Foreground="White" />
					</Button>
					<TextBlock Margin="5" VerticalAlignment="Center" Foreground="White" FontSize="14">
						<TextBlock.Text>
							<MultiBinding Converter="{StaticResource SecondsToTimeConverter}">
								<Binding Path="PlayerService.PositionInSeconds" />
								<Binding Path="PlayerService.DurationInSeconds" />
							</MultiBinding>
						</TextBlock.Text>
					</TextBlock>
					<Slider x:Name="ProgressSlider" Value="{Binding PlayerService.PositionInSeconds, Mode=TwoWay}"
                            Minimum="0" Maximum="{Binding PlayerService.DurationInSeconds}"
                            Width="300" Margin="5" VerticalAlignment="Center" MouseMove="ProgressSlider_MouseMove"/>
				</StackPanel>

				<!-- Volume Slider (короткий, справа) -->
				<StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10">
					<TextBlock Text="{Binding PlayerService.Volume, StringFormat={}{0:P0}, UpdateSourceTrigger=PropertyChanged}" 
                       Foreground="White" VerticalAlignment="Center" Margin="5,0" MinWidth="30" />
					<materialDesign:PackIcon Kind="VolumeHigh" VerticalAlignment="Center" Margin="5" Foreground="White" Width="20" Height="20" />
					<Slider Value="{Binding PlayerService.Volume, Mode=TwoWay}" 
                            Minimum="0" Maximum="1" 
                            Width="100" Margin="5" VerticalAlignment="Center"/>
				</StackPanel>
			</Grid>
		</materialDesign:Card>
	</Grid>
</Window>